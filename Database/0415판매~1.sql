SELECT * FROM PRODUCTS_TBL;
SELECT * FROM WHOLESALE_TBL;
SELECT * FROM BUY_TBL;
SELECT * FROM CUSTOMER_TBL;
SELECT * FROM SALES_TBL;
SELECT * FROM REGION_TBL;

UPDATE CUSTOMER_TBL
SET C_REGION = 'R0000' || SUBSTR(C_REGION, 5, 1);

--ROLLBACK;

--판매할 상품 리스트 > 상품명, 평균단가, 총개수(재고) 

SELECT * FROM PRODUCTS_TBL;
SELECT * FROM BUY_TBL;

SELECT T1.PRO_NAME, ROUND(AVG(NVL(T2.B_PRICE,0)),2) || '원' AS PROAVG, SUM(NVL(T2.B_QTY,0)) || '개' AS PROQTY
FROM PRODUCTS_TBL T1, BUY_TBL T2
WHERE T1.PRO_ID = T2.PRO_ID(+)
GROUP BY T1.PRO_ID,T1.PRO_NAME
ORDER BY T1.PRO_ID
;

--도매상별로 구매한 총금액 -- 도매상, 금액

SELECT T1.W_NAME, NVL(SUM(T2.B_PRICE * T2.B_QTY),0) AS PRICE
FROM WHOLESALE_TBL T1, BUY_TBL T2
WHERE T1.W_ID = T2.W_ID(+)
GROUP BY T1.W_NAME
;

--구매목록리스트 상품명, 도매상이름, 구매날짜, 단가, 수량 > 정렬 날짜순으로

SELECT T1.PRO_NAME, T2.W_NAME, T3.B_INDATE, T3.B_PRICE, T3.B_QTY
FROM PRODUCTS_TBL T1, WHOLESALE_TBL T2, BUY_TBL T3
WHERE T1.PRO_ID = T3.PRO_ID
AND T2.W_ID = T3.W_ID
ORDER BY T3.B_INDATE
;

--1. 고객별 구매 금액 고객, 총구매 금액

    SELECT T1.C_NAME, SUM(NVL(S_PRICE * S_QTY,0)) AS SALSE
    FROM CUSTOMER_TBL T1, SALES_TBL T2
    WHERE T1.C_ID = T2.C_ID(+)
    GROUP BY T1.C_ID, T1.C_NAME
    ORDER BY SUM(NVL(S_PRICE * S_QTY,0)) DESC
    ;

--2. 가장 많이 팔린 상품(개수)
SELECT * FROM
    (
    SELECT T1.PRO_NAME, SUM(NVL(S_QTY,0)) AS SALSE, RANK() OVER(ORDER BY SUM(NVL(S_QTY,0)) DESC) AS RNK
    FROM PRODUCTS_TBL T1, SALES_TBL T2
    WHERE T1.PRO_ID = T2.PRO_ID(+)
    GROUP BY T1.PRO_ID, T1.PRO_NAME
    ) A
    WHERE A.RNK = 1
    ;

--3. 2월에 가장많은 판매금액을 기록한 상품

    SELECT *
    FROM
    (
        SELECT T1.PRO_NAME, SUM(T2.S_PRICE * T2.S_QTY) AS TLTPRICE, RANK() OVER(ORDER BY SUM(T2.S_PRICE * T2.S_QTY) DESC) AS RNK
        FROM PRODUCTS_TBL T1, SALES_TBL T2
        WHERE T1.PRO_ID = T2.PRO_ID(+)
        AND TO_CHAR(S_OUTDATE,'YYYYMM') = '202102'
        GROUP BY T1.PRO_NAME
    )A
    WHERE A.RNK = 1
    ;

--4. 월별 구매 목록 - 2021년 1, 2, 3, 4월, 구매금액, 구매개수, 평균 구매단가
    
    SELECT TO_CHAR(B_INDATE, 'YYYY-MM'), SUM(B_PRICE), SUM(B_QTY), ROUND(AVG(B_PRICE),2)
    FROM BUY_TBL
    GROUP BY TO_CHAR(B_INDATE, 'YYYY-MM')
    ORDER BY TO_CHAR(B_INDATE, 'YYYY-MM')
    ;
    
    SELECT TRUNC(SYSDATE, 'YEAR') FROM DUAL;
    SELECT TRUNC(SYSDATE, 'MONTH') FROM DUAL;
    
    SELECT T1.OUTDATE, NVL(T2.TLTPRICE,0) FROM
    (
    SELECT TO_CHAR(TO_DATE(TO_CHAR( TRUNC(SYSDATE, 'YEAR'),'YYYYMM') + (LEVEL- 1) || '01'), 'YYYY-MM') AS OUTDATE
    FROM DUAL
    CONNECT BY LEVEL <= 4
    ) T1, 
    (
    SELECT TO_CHAR(S_OUTDATE, 'YYYY-MM') AS OUTDATE, SUM(S_PRICE * S_QTY) AS TLTPRICE,
        SUM(S_QTY), AVG(S_PRICE)
    FROM SALES_TBL
    GROUP BY TO_CHAR(S_OUTDATE, 'YYYY-MM')
    ) T2
    WHERE T1.OUTDATE = T2.OUTDATE(+)
    ORDER BY T1.OUTDATE ASC
    ;
    
--5. 1월1일부터 4월30일까지 하루하루 구매금액, 구매개수, 평균단가

    SELECT T1.INDATE, NVL(T2.B_PRICE,0), NVL(T2.B_QTY,0)
    FROM
    (
        SELECT TO_DATE('2021-01-01') + (LEVEL-1) AS INDATE
        FROM DUAL
    CONNECT BY LEVEL <= 120
    ) T1, BUY_TBL T2
    WHERE T1.INDATE = T2.B_INDATE(+)
    ORDER BY T1.INDATE
    ;
    
    SELECT TO_CHAR(B_INDATE), 'YYYY-MM-DD', SUM(B_PRICE * B_QTY)
    FROM BUY_TBL
    GROUP BY TO_CHAR(B_INDATE), 'YYYY-MM-DD'
    ;
--6. 고객별 판매금액
    

    SELECT LAST_DAY(SYSATE FROM DUAL);
    SELECT T1.C_NAME, SUM(T2.S_PRICE * T2.S_QTY)
    FROM
    CUSTOMER_TBL T1, SALES_TBL T2
    WHERE T1.C_ID = T2.C_ID(+)
    GROUP BY T1.C_ID, T1.C_NAME
    ;
    
--7. 가장많은 금액을 구매한 날짜

    SELECT *
    FROM
    (
        SELECT B_INDATE, SUM(B_PRICE * B_QTY), RANK() OVER(ORDER BY SUM(B_PRICE * B_QTY) DESC) AS RNK
        FROM BUY_TBL
        GROUP BY B_INDATE
    )
    WHERE RNK = 1
    ;
--8. 각 상품별로 이윤이 얼마가 남았는지 보여주세요
    SELECT * FROM SALES_TBL;
    SELECT B_PRICE * B_QTY FROM BUY_TBL
    WHERE PRO_ID = 'P00010'
    ;
    
    SELECT T3.PRO_NAME, NVL(SUM(T2.S_PRICE * T2.S_QTY) - SUM(T1.B_PRICE * T1.B_QTY),0)
    FROM BUY_TBL T1, SALES_TBL T2, PRODUCTS_TBL T3
    WHERE T1.PRO_ID = T2.PRO_ID
    AND T1.PRO_ID = T3.PRO_ID
    GROUP BY T3.PRO_NAME
    ;
    
    SELECT  T1.PRO_NAME,NVL(SALE,0),BUY, NVL(SALE - BUY,0)
    FROM
    (
    SELECT T2.PRO_ID,T2.PRO_NAME, NVL(SUM(B_PRICE * B_QTY),0) AS BUY
    FROM BUY_TBL T1, PRODUCTS_TBL T2
    WHERE T1.PRO_ID(+) = T2.PRO_ID
    GROUP BY T2.PRO_ID,T2.PRO_NAME
    ) T1,
    (
    SELECT T2.PRO_ID,T2.PRO_NAME, NVL(SUM(T1.S_PRICE * T1.S_QTY), 0) AS SALE
    FROM SALES_TBL T1, PRODUCTS_TBL T2
    WHERE T1.PRO_ID(+) = T2.PRO_ID
    GROUP BY T2.PRO_ID,T2.PRO_NAME
    ) T2
    WHERE T1.PRO_ID = T2.PRO_ID
    ORDER BY T1.PRO_ID ASC
    ;
    
    SELECT * FROM BUY_TBL WHERE PRO_ID = 'P00010';