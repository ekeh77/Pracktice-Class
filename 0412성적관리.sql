--datatype date
SELECT SYSDATE FROM DUAL;
--SYSDATE 날짜와 시분초가 다 들어있움
--DUAL은 가상의 테이블

CREATE TABLE DATE_TEST
(
    NAME    VARCHAR2(30)       NOT NULL,
    INDATE      DATE            NOT NULL
);

INSERT INTO DATE_TEST VALUES('홍길동', SYSDATE);
INSERT INTO DATE_TEST VALUES('전우치', '2021-04-11');
--시분초를 주지않고 넣으면 2021-04-11 12:00:00 이렇게 12시 기준으로 값이 들어가게된다.
INSERT INTO DATE_TEST VALUES('김갑돌', '2021-04-10');
--COMMIT;
SELECT * FROM DATE_TEST;

--1.DATE - TOCHAR 활용(DATE DATATYPE으로 된 데이터를 TO_CHAR로 표현할수있당
SELECT NAME, TO_CHAR(INDATE, 'YYYYMMDD') FROM DATE_TEST;
SELECT NAME, TO_CHAR(INDATE, 'YY-MM-DD') FROM DATE_TEST;
SELECT NAME, TO_CHAR(INDATE, 'YYYY-MM-DD HH:MI:SS') FROM DATE_TEST;


--2. DATE TYPE의 구동 원리 ORACLE --> 숫자타입으로 인식한다
SELECT SYSDATE + 1 FROM DUAL;      
--21/04/13 DD에 +- 한다

SELECT SYSDATE - 30 FROM DUAL;      
SELECT INDATE FROM DATE_TEST;

SELECT NAME, TO_CHAR(INDATE-1, 'YYYY-MM-DD HH:MI:SS') FROM DATE_TEST;
--시분초는 변하지 않고 날짜만 하루 뒤를 나타낸다. 



--1.년

SELECT INDATE,TO_CHAR(INDATE, 'YYYY')AS INYEAR FROM DATE_TEST;
SELECT INDATE,TO_CHAR(INDATE, 'MM')AS INMONTH FROM DATE_TEST;

--2021년 4월 12일 요일
SELECT INDATE, TO_CHAR(INDATE, 'DL') AS KOREANDATE FROM DATE_TEST;

--요일 월요일_2 / 일요일_1/토요일_7 
--만약 월요일을 1로 쓰고 싶다면 ,TO_CHAR(INDATE, 'D')-1
SELECT INDATE,TO_CHAR(INDATE,'DAY') ,TO_CHAR(INDATE, 'D') AS INWEEK FROM DATE_TEST;

SELECT INDATE,TO_CHAR(INDATE, 'YYYY')||'년' AS INYEAR FROM DATE_TEST;
SELECT INDATE,TO_CHAR(INDATE, ' MM')||'월' AS INMONTH FROM DATE_TEST;

--2021년 4월1일부터 4월 30일가지 날짜를 모두 표시하고 출석횟수를 보여주세요
SELECT LEVEL, INDATE
FROM DATE_TEST
CONNECT BY LEVEL<3
;
--LEVEL: 
SELECT SYSDATE, LEVEL, SYSDATE - LEVEL
FROM DUAL
CONNECT BY LEVEL<30
;

SELECT TO_DATE('2021-03-31') + LEVEL
FROM DUAL
CONNECT BY LEVEL <=30;
--위의 처럼 3월 31일로 하지말고 아래처럼 LEVEL에 1을 빼장
SELECT TO_DATE('2021-04-01') + LEVEL -1
FROM DUAL
CONNECT BY LEVEL <=30;

SELECT TO_DATE('2021-04-01') +(LEVEL -1) AS MONTH_DATE 
FROM DUAL
CONNECT BY LEVEL<=30;

SELECT TO_CHAR(TO_DATE('2021-04-01') +(LEVEL -1), 'YYYY-MM-DD') AS MONTH_DATE 
FROM DUAL
CONNECT BY LEVEL<=30;

SELECT * FROM DATE_TEST;

INSERT INTO DATE_TEST VALUES('전우치', '2021-04-11');

--COMMIT;

SELECT TO_CHAR(INDATE, 'YYYY-MM-DD'), COUNT(*)
FROM DATE_TEST
GROUP BY TO_CHAR(INDATE, 'YYYY-MM-DD')
;

SELECT SYSDATE,LEVEL FROM DUAL
CONNECT BY LEVEL <= 30
;

SELECT TO_DATE('2021-04-01') + (LEVEL-1)AS MDATE 
FROM DUAL
CONNECT BY LEVEL <= 30
;

SELECT T1.MDATE, COUNT(T2.INDATE) FROM
(
    SELECT TO_DATE(:INDATE) + (LEVEL-1)AS MDATE 
    FROM DUAL
    CONNECT BY LEVEL <= TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE(:INDATE)), 'DD'))
) T1, DATE_TEST T2 
WHERE TO_CHAR(T1.MDATE, 'YYYYMMDD') = TO_CHAR(T2.INDATE(+), 'YYYYMMDD')
GROUP BY T1.MDATE
ORDER BY T1.MDATE
;

--10억분의 1초가 표시된다
SELECT SYSTIMESTAMP FROM DUAL;
--월을 더하는것
SELECT ADD_MONTHS(SYSDATE, 5) FROM DUAL;
--두 날짜 사이의 값
SELECT MONTHS_BETWEEN(SYSDATE, SYSDATE + 10)FROM DUAL;
--마지막날 구하기
SELECT LAST_DAY(SYSDATE) FROM DUAL; 
--앞의 날짜를 기준으로 요일을 찾아주는 함수
SELECT NEXT_DAY(SYSDATE, 3) FROM DUAL;

--2021 1 ~ 2021 12
SELECT T1.MDATE, COUNT(T2.INDATE) 
FROM
(
    SELECT TO_CHAR(ADD_MONTHS(TO_DATE('2021-01-01'),(LEVEL-1)),'YYYY-MM') AS MDATE FROM DUAL
    CONNECT BY LEVEL <= 12
) T1, DATE_TEST T2
WHERE T1.MDATE = TO_CHAR(T2.INDATE(+),'YYYY-MM')
GROUP BY T1.MDATE
ORDER BY T1.MDATE
;

SELECT TO_CHAR(INDATE, 'YYYY-MM')
FROM
(
    SELECT TO_DATE('2021-01-01'), (LEVEL - 1),
    TO_DATE('2021-01-01') + (LEVEL - 1) AS INDATE
    FROM DUAL
    CONNECT BY LEVEL <= 365
)
GROUP BY TO_CHAR(INDATE, 'YYYY-MM')
ORDER BY TO_CHAR(INDATE, 'YYYY-MM')
;

SELECT TO_CHAR(TO_DATE('202101' + (LEVEL-1) || '01'), 'YYYY-MM')FROM DUAL
CONNECT BY LEVEL <= 12